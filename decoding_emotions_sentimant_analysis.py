# -*- coding: utf-8 -*-
"""Decoding_Emotions_Sentimant_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1et16yCrzkV3kvMSN13SaLftRZj1f26_H
"""

from google.colab import files
uploaded = files.upload()

# 1. Imports and Data Loading
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report
import gradio as gr

# Load data
df = pd.read_csv("drugsComTest_raw.csv")

df = df.dropna(subset=['review', 'rating'])

def label_sentiment(rating):
    if rating >= 8:
        return 'Positive'
    elif rating >= 5:
        return 'Neutral'
    else:
        return 'Negative'

df['sentiment'] = df['rating'].apply(label_sentiment)

X = df['review']
y = df['sentiment']

vectorizer = TfidfVectorizer(stop_words='english', max_features=5000)
X_vec = vectorizer.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_vec, y, test_size=0.2, random_state=42)

model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

def predict_sentiment(review):
    vec = vectorizer.transform([review])
    pred = model.predict(vec)
    return pred[0]

interface = gr.Interface(
    fn=predict_sentiment,
    inputs=gr.Textbox(lines=5, label="Enter Drug Review"),
    outputs=gr.Label(label="Predicted Sentiment"),
    title="ðŸ§ª Drug Review Sentiment Analyzer",
    description="Enter a drug review to predict whether the sentiment is Positive, Neutral, or Negative."
)

interface.launch()